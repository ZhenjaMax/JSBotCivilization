1. ПРЕВРАТИТЬ ПОЛЬЗОВАТЕЛЯ В ID
message.author.id
ИЛИ
user.id

2. ПРЕВРАТИТЬ ID В ПОЛЬЗОВАТЕЛЯ

3. ПОЛУЧИТЬ КАНАЛ ПО ID
bot.channels.cache.get(chatChannelID)

4. ПОЛУЧИТЬ ID ТЕКСТОВОГО КАНАЛА В ЧАТЕ
 - упомянуть канал, написать \ перед названием.

5. ПОЛУЧИТЬ ID ПОЛЬЗОВАТЕЛЯ В ЧАТЕ
-  упомянуть игрока, написать \ перед названием.

6. УПОМЯНУТЬ ПОЛЬЗОВАТЕЛЯ БОТОМ
channel.send(message.author.toString());

7. ВЗАИМОДЕЙСТВИЕ С БАЗОЙ ДАННЫХ.

        7.1. // equivalent to: INSERT INTO tags (name, description, username) values (?, ?, ?);
        const tag = await database.create({ name: tagName, description: tagDescription, username: message.author.username });

        7.2. // equivalent to: UPDATE tags SET usage_count = usage_count + 1 WHERE name = 'tagName';
        const tag = await database.findOne({ where: { name: tagName } });

        7.3. // equivalent to: UPDATE tags (description) values (?) WHERE name='?';
        const tagDescription = splitArgs.join(' ');

        7.4. // ОБНОВИТЬ ДАННЫЕ
        const affectedRows = await database.update({ description: tagDescription }, { where: { name: tagName } });

        7.5. // equivalent to: SELECT name FROM tags;
        const tagList = await database.findAll({ attributes: ['name'] });
        const tagString = tagList.map(t => t.name).join(', ') || 'No tags set.';

        7.6. // equivalent to: DELETE from tags WHERE name = ?;
        const rowCount = await database.destroy({ where: { name: tagName } });

        7.7.
        const cars = await Car.findAll({ 
                where: {
                userId: { [Op.in]: myUserIds }, // userId   IN      [2, 3, 4]       (myUserIds = [2, 3, 4])
                action: 'start',                // action   IS      "start"
                sellDate: { [Op.not]: null },   // sellDate IS      NOT NULL
                status: { [Op.is]: null, }      // status   IS      NULL
        },
        order: [ ['id', 'DESC'] ],              // Like: ORDER BY id DESC
        limit: 5, 
        offset: 1
        });

8. ИСПОЛЬЗОВАТЬ MEMBER вместо USER (более общий класс)

